{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Turn = function Turn(_ref) {\n  var turn = _ref.turn,\n    disabled = _ref.disabled,\n    ai = _ref.ai;\n  var renderTurnInfo = function renderTurnInfo() {\n    if (disabled) {\n      if (turn === 0) {\n        return _jsx(Text, {\n          style: styles.turn,\n          children: \"It is a draw!\"\n        });\n      } else {\n        if (ai) {\n          if (turn == 1) {\n            return _jsxs(_Fragment, {\n              children: [_jsxs(Text, {\n                style: styles.turn,\n                children: [\"Player \", turn, \" \"]\n              }), _jsx(View, {\n                style: [styles.turnDisc, {\n                  marginRight: wp(3)\n                }]\n              }), _jsx(Text, {\n                style: styles.turn,\n                children: \"won!\"\n              })]\n            });\n          } else {\n            return _jsxs(_Fragment, {\n              children: [_jsx(Text, {\n                style: styles.turn,\n                children: \"AI \"\n              }), _jsx(View, {\n                style: [styles.turnDisc, {\n                  backgroundColor: '#b11d22',\n                  marginRight: wp(3)\n                }]\n              }), _jsx(Text, {\n                style: styles.turn,\n                children: \"won!\"\n              })]\n            });\n          }\n        } else {\n          return _jsxs(_Fragment, {\n            children: [_jsxs(Text, {\n              style: styles.turn,\n              children: [\"Player \", turn, \" \"]\n            }), turn == 1 ? _jsx(View, {\n              style: styles.turnDisc\n            }) : _jsx(View, {\n              style: [styles.turnDisc, {\n                backgroundColor: '#b11d22'\n              }]\n            }), _jsx(Text, {\n              style: styles.turn,\n              children: \"won!\"\n            })]\n          });\n        }\n      }\n    } else {\n      return _jsxs(_Fragment, {\n        children: [_jsx(Text, {\n          style: styles.turn,\n          children: ai && turn == 2 ? 'Turn: AI ' : \"Turn: Player \" + turn + \" \"\n        }), turn == 1 ? _jsx(View, {\n          style: styles.turnDisc\n        }) : _jsx(View, {\n          style: [styles.turnDisc, {\n            backgroundColor: '#b11d22'\n          }]\n        })]\n      });\n    }\n  };\n  return _jsx(View, {\n    style: styles.infoView,\n    children: renderTurnInfo()\n  });\n};\nvar styles = StyleSheet.create({\n  infoView: {\n    flex: 2,\n    alignItems: \"flex-start\",\n    justifyContent: 'center',\n    flexDirection: 'row',\n    paddingTop: wp(6)\n  },\n  turn: {\n    color: 'black',\n    fontSize: wp(12),\n    fontFamily: 'notoserif',\n    fontWeight: '300'\n  },\n  turnDisc: {\n    width: wp(12),\n    height: hp(6),\n    borderRadius: wp(15),\n    backgroundColor: '#ccb002',\n    marginTop: wp(2.5),\n    marginRight: wp(5)\n  }\n});\nexport default Turn;","map":{"version":3,"names":["React","View","Text","StyleSheet","widthPercentageToDP","wp","heightPercentageToDP","hp","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Turn","_ref","turn","disabled","ai","renderTurnInfo","style","styles","children","turnDisc","marginRight","backgroundColor","infoView","create","flex","alignItems","justifyContent","flexDirection","paddingTop","color","fontSize","fontFamily","fontWeight","width","height","borderRadius","marginTop"],"sources":["/usercode/connect4/components/Turn.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nconst Turn = ({ turn, disabled, ai }) => {\n\n  /*\n    Props\n    turn => Integer representing whose turn it is, i.e., player 1, player 2, or AI\n    disabled => Boolean to enable or disable the Connect 4 game board. The board is disabled once the game is over\n    ai => Boolean representing whether the AI is playing or not. If false, it means player 2 is playing\n  */\n\n  const renderTurnInfo = () => {\n    // if game is over\n    if (disabled) {\n      // if turn is 0, it means it is a draw\n      if (turn === 0) {\n        return <Text style={styles.turn}>It is a draw!</Text>;\n      }\n      // if turn is not 0, it means it was either player vs. player or player vs. ai\n      else {\n        // if player vs. ai\n        if (ai) {\n          // player 1 won if turn is 1\n          if (turn == 1) {\n            return (\n              <>\n                <Text style={styles.turn}>Player {turn} </Text>\n                <View style={[styles.turnDisc, { marginRight: wp(3) }]}></View>\n                <Text style={styles.turn}>won!</Text>\n              </>\n            );\n          }\n          // otherwise, ai won\n          else {\n            return (\n              <>\n                <Text style={styles.turn}>AI </Text>\n                <View style={[styles.turnDisc, {backgroundColor: '#b11d22', marginRight: wp(3)}]}></View>\n                <Text style={styles.turn}>won!</Text>\n              </>\n            );\n          }\n        }\n        // if player vs. player\n        else {\n          return (\n            <>\n              <Text style={styles.turn}>Player {turn} </Text>\n              {turn == 1 ? (\n                <View style={styles.turnDisc}></View>\n              ) : (\n                <View style={[styles.turnDisc, { backgroundColor: '#b11d22' }]}></View>\n              )}\n              <Text style={styles.turn}>won!</Text>\n            </>\n          );\n        }\n      }\n    }\n    // if game is still in progress\n    else {\n      return (\n        <>\n          <Text style={styles.turn}>\n            {/* if ai is enabled and turn is 2, we display ai turn. otherwise we display player turn */}\n            {ai && turn == 2 ? 'Turn: AI ' : `Turn: Player ${turn} `}\n          </Text>\n          {/* we render disc colors based on the turn value */}\n          {turn == 1 ? (\n            <View style={styles.turnDisc}></View>\n          ) : (\n            <View style={[styles.turnDisc, { backgroundColor: '#b11d22' }]}></View>\n          )}\n        </>\n      );\n    }\n  };\n    \n\n  return (\n    <View style={styles.infoView}>\n      { renderTurnInfo() }\n      </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  infoView: {\n    flex: 2,\n    alignItems: \"flex-start\",\n    justifyContent: 'center',\n    flexDirection: 'row',\n    paddingTop: wp(6),\n  },\n  turn: {\n    color: 'black',\n    fontSize: wp(12),\n    fontFamily: 'notoserif',\n    fontWeight: '300',\n  },\n  turnDisc: {\n    width: wp(12),\n    height: hp(6),\n    borderRadius: wp(15),\n    backgroundColor: '#ccb002',\n    marginTop: wp(2.5),\n    marginRight: wp(5)\n  },\n});\n\nexport default Turn;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}